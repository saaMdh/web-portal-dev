#import "@/components/Announcement/AnnouncementCard.graphql"
#import "@/components/Announcement/AnnouncementCardFull.graphql"
#import "@/components/Announcement/AnnouncementCardMini.graphql"
#import "@/components/Store/StoreCardFull.graphql"

query SearchStoreQuery($q: String, $filter: StoreSearchFilterInput) {
  searchStore: storeSearch(q: $q, filter: $filter) {
    data {
      ...StoreCardFullContent
    }
  }
}

query SearchQuery(
  $q: String
  $filter: SearchFilterInput
  $mediaSize: MediaSize = MEDIUM
) {
  search(q: $q, filter: $filter) {
    announcements {
      data {
        ...AnnouncementContent
        smallDescription {
          valueText
        }
        noAdsense
      }
      paginatorInfo {
        lastPage
        hasMorePages
      }
    }

    active {
      category {
        id
        name
        slug
        icon
        delivery
        deliveryType
        priceUnits
        children {
          id
          name
          slug
          icon
        }
        specifications {
          isRequired
          specification {
            id
            codename
            label
            type
            class
            datasets {
              codename
              label
            }
            dependsOn {
              id
              codename
            }
            subSpecifications {
              id
              codename
              label
              type
            }
            allSubSpecificationCodenames
          }
        }
        parentTree {
          id
          name
          slug
          icon
          children {
            id
            name
            slug
            icon
          }
        }
        parent {
          id
          name
          icon
        }
      }
      count
    }
    suggested {
      category {
        id
        name
        slug
        icon
      }
      count
    }
  }
}

query SearchQueryWithoutFilters(
  $q: String
  $filter: SearchFilterInput
  $mediaSize: MediaSize = MEDIUM
) {
  search(q: $q, filter: $filter) {
    announcements {
      data {
        ...AnnouncementContent
        smallDescription {
          valueText
        }
        noAdsense
      }
      paginatorInfo {
        lastPage
        hasMorePages
      }
    }
    active {
      category {
        id
        name
        delivery
        slug
        icon
      }
      count
    }
    suggested {
      category {
        id
        name
        slug
        icon
      }
      count
    }
  }
}

query PromoSquareQuery(
  $location: PromotionLocation!
  $count: Int
  $categoryId: ID
) {
  squarePromo: promotionFetch(
    location: $location
    maxCount: $count
    categoryId: $categoryId
  ) {
    id
    target {
      ... on Store {
        id
        name
        description
        imageUrl
        followerCount
        announcementsCount
        url
        slug
        mainLocation {
          id
          location {
            id
            region {
              name
            }
            city {
              name
            }
          }
        }
        announcements(count: 6, page: 1) {
          data {
            id
            defaultMedia(size: SMALL) {
              mediaUrl
            }
          }
        }
      }
    }
  }
}

query TopAnnounQuery(
  $location: PromotionLocation!
  $count: Int
  $categoryId: ID
  $categorySlug: String
  $mediaSize: MediaSize = SMALL
  $hideStore: Boolean = false
) {
  topAnnounList: promotionFetch(
    location: $location
    maxCount: $count
    categoryId: $categoryId
    categorySlug: $categorySlug
  ) {
    id
    target {
      ... on PromotionAnnouncement {
        ...PromotionMiniContent
      }
    }
  }
}

query PromoFeedListQuery(
  $location: PromotionLocation!
  $categoryId: ID
  $withoutAdSense: Boolean
) {
  promos: promotionFetch(
    location: $location
    categoryId: $categoryId
    withoutAdSense: $withoutAdSense
  ) {
    id
    targetLink
    currentVisual {
      media {
        mediaUrl: media
        mimeType
        width
        height
        background
      }
    }
  }
}
